#include <Adafruit_NeoPixel.h>

// Please note below where to adjust for the pin and Neopixel type being used in your circuit
// Default: PIN 6, Neopixel v2

// ********* LOOKUP TABLE *********

const uint16_t totalFixtures = 16;
const uint16_t totalFrames = 50;

const uint8_t fx[totalFixtures][totalFrames][3] PROGMEM = {

 // fixture 1 - user position 1 
 {
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {190, 90, 79}, {190, 90, 79}, 
  {255, 63, 15}, {255, 63, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 64, 15}, {255, 64, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  // 1s elapsed
  
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {244, 216, 46}, {244, 216, 46}, {87, 157, 27}, {87, 157, 27}, 
  // 2s elapsed
  
 },

 // fixture 2 - user position 2 
 {
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {7, 71, 130}, 
  {7, 71, 130}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  // 1s elapsed
  
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 210, 35}, {255, 210, 35}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 34}, {255, 210, 34}, {86, 157, 27}, 
  {86, 157, 27}, {5, 67, 139}, {5, 67, 139}, {1, 68, 136}, {1, 68, 136}, 
  // 2s elapsed
  
 },

 // fixture 3 - user position 3 
 {
  {2, 68, 136}, {2, 68, 136}, {255, 65, 17}, {255, 65, 17}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 152, 39}, 
  // 1s elapsed
  
  {255, 152, 39}, {255, 210, 34}, {255, 210, 34}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {87, 157, 28}, {87, 157, 28}, {87, 157, 28}, {87, 157, 28}, {1, 68, 140}, 
  {1, 68, 140}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  // 2s elapsed
  
 },

 // fixture 4 - user position 4 
 {
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 211, 30}, {255, 211, 30}, {255, 210, 33}, 
  // 1s elapsed
  
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {254, 211, 33}, {254, 211, 33}, {87, 157, 27}, {87, 157, 27}, 
  {10, 72, 103}, {10, 72, 103}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  // 2s elapsed
  
 },

 // fixture 5 - user position 5 
 {
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {246, 70, 7}, {246, 70, 7}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  // 1s elapsed
  
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {92, 155, 25}, 
  {92, 155, 25}, {87, 157, 27}, {87, 157, 27}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {3, 68, 133}, {3, 68, 133}, {255, 65, 15}, {255, 65, 15}, 
  // 2s elapsed
  
 },

 // fixture 6 - user position 6 
 {
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  // 1s elapsed
  
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 34}, {255, 210, 34}, {87, 157, 27}, {87, 157, 27}, {3, 67, 137}, 
  {3, 67, 137}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  // 2s elapsed
  
 },

 // fixture 7 - user position 7 
 {
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {254, 211, 34}, 
  {254, 211, 34}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  // 1s elapsed
  
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {250, 215, 44}, {250, 215, 44}, 
  {87, 156, 29}, {87, 156, 29}, {3, 67, 136}, {3, 67, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {254, 66, 15}, {254, 66, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  // 2s elapsed
  
 },

 // fixture 8 - user position 8 
 {
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 182, 51}, {255, 182, 51}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  // 1s elapsed
  
  {255, 210, 33}, {85, 158, 28}, {85, 158, 28}, {87, 157, 27}, {87, 157, 27}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {39, 68, 118}, {39, 68, 118}, 
  {255, 65, 14}, {255, 65, 14}, {255, 65, 13}, {255, 65, 13}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  // 2s elapsed
  
 },

 // fixture 9 - user position 9 
 {
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {88, 157, 32}, 
  // 1s elapsed
  
  {88, 157, 32}, {88, 156, 27}, {88, 156, 27}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {105, 95, 92}, {105, 95, 92}, {255, 65, 13}, {255, 65, 13}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  // 2s elapsed
  
 },

 // fixture 10 - user position 10 
 {
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 34}, {255, 210, 34}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {100, 153, 20}, {100, 153, 20}, {87, 157, 27}, {87, 157, 27}, {1, 68, 137}, 
  // 1s elapsed
  
  {1, 68, 137}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {3, 67, 136}, {3, 67, 136}, {254, 65, 18}, 
  {254, 65, 18}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  // 2s elapsed
  
 },

 // fixture 11 - user position 11 
 {
  {255, 210, 34}, {255, 210, 34}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {93, 155, 19}, {93, 155, 19}, {87, 156, 30}, {87, 156, 30}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  // 1s elapsed
  
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {9, 66, 127}, {9, 66, 127}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  // 2s elapsed
  
 },

 // fixture 12 - user position 12 
 {
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {144, 168, 21}, {144, 168, 21}, {85, 158, 27}, 
  {85, 158, 27}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  // 1s elapsed
  
  {1, 68, 136}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 67, 15}, {255, 67, 15}, {255, 210, 33}, {255, 210, 33}, 
  // 2s elapsed
  
 },

 // fixture 13 - user position 13 
 {
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 35}, {255, 210, 35}, {90, 157, 30}, {90, 157, 30}, 
  {87, 157, 26}, {87, 157, 26}, {1, 68, 139}, {1, 68, 139}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 137}, {1, 68, 137}, 
  {1, 68, 136}, {1, 68, 136}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  // 1s elapsed
  
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {250, 70, 7}, {250, 70, 7}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  // 2s elapsed
  
 },

 // fixture 14 - user position 14 
 {
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {91, 156, 30}, 
  {91, 156, 30}, {90, 153, 100}, {90, 153, 100}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {2, 66, 142}, {2, 66, 142}, {255, 65, 13}, {255, 65, 13}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  // 1s elapsed
  
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {252, 69, 13}, {252, 69, 13}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  // 2s elapsed
  
 },

 // fixture 15 - user position 15 
 {
  {118, 146, 11}, {118, 146, 11}, {87, 157, 27}, {87, 157, 27}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {2, 67, 137}, {2, 67, 137}, {255, 65, 18}, 
  {255, 65, 18}, {255, 65, 15}, {255, 65, 15}, {255, 65, 16}, {255, 65, 16}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  // 1s elapsed
  
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 210, 34}, {255, 210, 34}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  // 2s elapsed
  
 },

 // fixture 16 - user position 16 
 {
  {87, 156, 29}, {87, 156, 29}, {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, 
  {1, 68, 136}, {1, 68, 136}, {1, 68, 136}, {1, 68, 137}, {1, 68, 137}, 
  {2, 68, 136}, {2, 68, 136}, {255, 65, 16}, {255, 65, 16}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  // 1s elapsed
  
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, 
  {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 65, 15}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, {255, 210, 33}, 
  // 2s elapsed
  
 },

};







// ********************************




#define PIN     6  // ********* ADJUST FOR PIN IN YOUR CIRCUIT *********
#define N_LEDS totalFixtures


// Declaring a Neopixel object
// Parameter 1 = number of pixels in strip total, inc indiv leds in rings
// Parameter 2 = pin number (most are valid)
// Parameter 3 = pixel type flags, add together as needed:
//   NEO_KHZ800  800 KHz bitstream (most NeoPixel products w/WS2812 LEDs)
//   NEO_KHZ400  400 KHz (classic 'v1' (not v2) FLORA pixels, WS2811 drivers)
//   NEO_GRB     Pixels are wired for GRB bitstream (most NeoPixel products)
//   NEO_RGB     Pixels are wired for RGB bitstream (v1 FLORA pixels, not v2)
// ********* ADJUST FOR YOUR NEOPIXELS *********
Adafruit_NeoPixel strip = Adafruit_NeoPixel(N_LEDS, PIN, NEO_GRB + NEO_KHZ800);

// frame counter
int fr = 0;

long previousMillis = 0; // to store last time LEDs were updated
int interval = 39; // 40ms = 25fps, with a bit of a buffer


void setup() {
  strip.begin();
  Serial.begin(9600);
}


void loop() {
  
   unsigned long currentMillis = millis();

   if (currentMillis - previousMillis >= interval) {
      previousMillis = currentMillis;

      for (int i = 0; i < totalFixtures; i++) {
        uint8_t r = pgm_read_byte_near(&fx[i][fr][0]);
        uint8_t g = pgm_read_byte_near(&fx[i][fr][1]);
        uint8_t b = pgm_read_byte_near(&fx[i][fr][2]);
        uint32_t c = strip.Color(r, g, b);
        strip.setPixelColor(i, c);
        strip.show();
      };
      
      fr++;
      if (fr == totalFrames) {
        fr = 0;
      }
   }
}



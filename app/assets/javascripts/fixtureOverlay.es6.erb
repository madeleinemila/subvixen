let click = 0;
let overlay = false;
const olaySize = 20;
const borderSize = 5;
const charInc = 4;

$('.pages.stage').ready(function() {

  $('#f-overlay').on('click', function() {
    if (click % 2 === 0) {
      simCtx.clearRect( 0, 0, vw, vh ); // clear previous render
      if (fixtures.length > 0) {
          // f.color = getPixelHex( stageCtx, f.x, f.y );
          // drawCircle( f.x, f.y, olaySize, 'white', borderSize, f.color, simCtx );
          // simCtx.font = "14px Helvetica";
          // simCtx.fillStyle = "#222";
          // numToDisplay( f, borderSize, charInc );
        drawSimOverlay();
        $(this).text( 'HIDE OVERLAY' );
        $(this).addClass( 'generating' );
        overlay = true;
        click++;
      }
    } else {
      refresh();
      $(this).text( 'SHOW OVERLAY' );
      $(this).removeClass( 'generating' );
      overlay = false;
      click++;
    }
  }); // end on click

});


const drawSimOverlay = function() {
      fixtures.forEach(function(f) {
        f.color = getPixelHex( stageCtx, f.x, f.y );
        drawCircle( f.x, f.y, olaySize, 'white', borderSize, f.color, simCtx );
        simCtx.font = "14px Helvetica";
        simCtx.fillStyle = "#222";
        numToDisplay( f, borderSize, charInc );
      });
};

const numToDisplay = function( f, border, char ) {
    const num = f.posNum.toString();
    if (num.length === 1) {
      simCtx.fillText( f.posNum, f.x - border, f.y + border );
    } else if (num.length === 2) {
      simCtx.fillText( f.posNum, f.x - border - char, f.y + border );
    } else if (num.length === 3) {
      simCtx.fillText( f.posNum, f.x - border - char * 2, f.y + border );
    } else if (num.length > 3) {
      simCtx.fillText( f.posNum, f.x - border - char * 3, f.y + border );
    }
};

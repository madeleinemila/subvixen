let gen = false;
const fps = 25;
const frameInterval = 1 / fps; // 25fps, 40ms
let frame = 1;

$('.pages.stage').ready(function() {

  // when generate button is clicked
  $('#generate').on('click', function() {
    if (fixtures.length === 0) return;
    console.log(`Starting pixel generation...`);
    // change look of generate button
    $(this).addClass( 'generating' );
    $(this).text("GENERATING...");
    video.pause(); // in case already playing
    setTimeout(function() {  // allowing time for video.pause() to complete
      // clear previous lut values
      lut.forEach((arr) => {
        arr.length = 0;
      });
      // set video to not looping
      video.loop = false;
      $('#loop').removeClass( "on" );
      // set to start
      video.currentTime = 0;
      // flag for generation active
      gen = true;
    }, 200);
  });


  $('#stage-video').on('timeupdate', function() {
    if (!gen) return; // ** code below only to run if generate was clicked

    // draw new frame
    drawNewStageFrame();
    simCtx.clearRect(0, 0, vw, vh); // clear previous canvas to avoid aliasing
    if (overlay) {
      drawSimOverlay();
    } else {
      drawSim();
    }

    // ** sort fixtures by posNum
    const fSorted = _(fixtures).sortBy( 'posNum' );
    // update lut table
    fSorted.forEach(function(f, i) {
      const pixel = getPixelHex( stageCtx, f.x, f.y );
      lut[i].push( pixel );
    });

    // move to next frame
    video.currentTime += frameInterval;
    frame++;

    if (frame > numFrames) {
      console.log( 'Finished generating lookup table' );
      frame = 1; // reset frame counter
      drawFixtures(); // draw fixture icons back over
      video.currentTime = video.duration; // make sure video parks right at end in case durn wasnt evenly divis by interval
      gen = false;
      // **** DISPLAY GENERATED CODE ****
      stringifyLUT();
      displayLUT();
      // return generate button to orig look
      $('#generate').removeClass( 'generating' );
      $('#generate').text("GENERATE");
    }

  });

});





//**
